file_path <- "Most Streamed Spotify Songs 2024.csv"  # Update path if needed
spotify_data <- read_csv(file_path, locale = locale(encoding = "ISO-8859-1"))
library(tidyverse)
file_path <- "Most Streamed Spotify Songs 2024.csv"  # Update path if needed
spotify_data <- read_csv(file_path, locale = locale(encoding = "ISO-8859-1"))
fix_encoding_issues <- function(x, col_name) {
if (is.factor(x)) {
x <- as.character(x)
}
x[is.na(x)] <- paste("Unknown", col_name)
x <- ifelse(grepl("[^\x20-\x7E]", x), paste("Unknown", col_name), x)
return(x)
}
text_columns <- c("Track", "Album Name", "Artist")
for (col in text_columns) {
spotify_data[[col]] <- fix_encoding_issues(spotify_data[[col]], col)
}
View(spotify_data)
library(tidyverse)
file_path <- "Most Streamed Spotify Songs 2024.csv"  # Update path if needed
spotify_data <- read_csv(file_path, locale = locale(encoding = "ISO-8859-1"))
str(spotify_data)
glimpse(spotify_data)
colSums(is.na(spotify_data))
fix_encoding_issues <- function(x, col_name) {
if (is.factor(x)) {
x <- as.character(x)
}
x[is.na(x)] <- paste("Unknown", col_name)
x <- ifelse(grepl("[^\x20-\x7E]", x), paste("Unknown", col_name), x)
return(x)
}
text_columns <- c("Track", "Album Name", "Artist")
for (col in text_columns) {
spotify_data[[col]] <- fix_encoding_issues(spotify_data[[col]], col)
}
colSums(is.na(spotify_data))
spotify_data <- spotify_data %>%
filter(!is.na(Spotify.Streams))
spotify_data <- spotify_data %>%
filter(!is.na(`Spotify Streams`))
colSums(is.na(spotify_data))
write_csv(spotify_data, "Cleaned_Spotify_Data.csv")
write_csv(spotify_data, "Cleaned_Spotify_Data.csv")
write_csv(spotify_data, "Cleaned_Spotify_Data.csv")
spotify_data <- spotify_data %>%
filter(!is.na(`Spotify Streams` & Artist != "xSyborg"))
write_csv(spotify_data, "Cleaned_Spotify_Data.csv")
file_path <- "Most Streamed Spotify Songs 2024.csv"  # Update path if needed
spotify_data <- read_csv(file_path, locale = locale(encoding = "ISO-8859-1"))
fix_encoding_issues <- function(x, col_name) {
if (is.factor(x)) {
x <- as.character(x)
}
x[is.na(x)] <- paste("Unknown", col_name)
x <- ifelse(grepl("[^\x20-\x7E]", x), paste("Unknown", col_name), x)
return(x)
}
text_columns <- c("Track", "Album Name", "Artist")
for (col in text_columns) {
spotify_data[[col]] <- fix_encoding_issues(spotify_data[[col]], col)
}
spotify_data <- spotify_data %>%
filter(!is.na(`Spotify Streams`) & Artist != "xSyborg")
write_csv(spotify_data, "Cleaned_Spotify_Data.csv")
file_path <- "Most Streamed Spotify Songs 2024.csv"  # Update path if needed
spotify_data <- read_csv(file_path, locale = locale(encoding = "ISO-8859-1"))
fix_encoding_issues <- function(x, col_name) {
if (is.factor(x)) {
x <- as.character(x)
}
x[is.na(x)] <- paste("Unknown", col_name)
x <- ifelse(grepl("[^\x20-\x7E]", x), paste("Unknown", col_name), x)
return(x)
}
text_columns <- c("Track", "Album Name", "Artist")
for (col in text_columns) {
spotify_data[[col]] <- fix_encoding_issues(spotify_data[[col]], col)
}
spotify_data <- spotify_data %>%
filter(!is.na(`Spotify Streams`) & Artist != "xSyborg") %>%
mutate(`Release Date` = as.Date(`Release Date`, format = "%m/%d/%Y")) %>% # Convert to Date
group_by(Track) %>%
filter(`Release Date` == min(`Release Date`)) %>%
ungroup()
write_csv(spotify_data, "Cleaned_Spotify_Data.csv")
library(tidyverse)
file_path <- "Most Streamed Spotify Songs 2024.csv"  # Update path if needed
spotify_data <- read_csv(file_path, locale = locale(encoding = "ISO-8859-1"))
fix_encoding_issues <- function(x, col_name) {
if (is.factor(x)) {
x <- as.character(x)
}
x[is.na(x)] <- paste("Unknown", col_name)
x <- ifelse(grepl("[^\x20-\x7E]", x), paste("Unknown", col_name), x)
return(x)
}
text_columns <- c("Track", "Album Name", "Artist")
for (col in text_columns) {
spotify_data[[col]] <- fix_encoding_issues(spotify_data[[col]], col)
}
colSums(is.na(spotify_data))
spotify_data <- spotify_data %>%
filter(!is.na(`Spotify Streams`) & Artist != "xSyborg") %>%
mutate(`Release Date` = as.Date(`Release Date`, format = "%m/%d/%Y")) %>% # Convert to Date
group_by(Track) %>%
arrange(`Release Date`, desc(`Track Score`)) %>%  # Sort by earliest date, then highest Track Score
slice(1) %>%
ungroup()
write_csv(spotify_data, "Cleaned_Spotify_Data.csv")
